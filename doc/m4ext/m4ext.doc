
--------------------------------------------------------------------------
            Small manual for the ircd.conf extended m4 macros
--------------------------------------------------------------------------
            Version 2.0, internal revision number 19931105 --Nap
            $Id: m4ext.doc,v 2.1 1993/11/15 15:36:11 pioch Exp pioch $

This ircd.conf uses m4 to lighten the configuration work.
You need to have #define M4_PREPROC in the server config.h
for this to work, and have a file called "ircd.m4" in the IRCD directory.
ircd.m4 is created by "make install"

Currently I don't use the macros in ircd.m4, so it can be empty!
it just has to be there... so that m4 doesn't fail miserably.
(actually the m4ext package 'make install' eventually created it for you :)

The macros used below are in a file called 'ircd.m4ext'.
(the file INSTALL has instructions on how to install this file)
Besides, the ircd.conf must include this file.

Summary: for the whole thing to work, you need to have in the IRCD directory:
	ircd.conf
	ircd.m4    (created by ircd 'make install', eventually by m4ext)
	ircd.m4ext (copied over by the m4ext package 'make install')

Why does it make the writing of ircd.conf real simple ? Because
all the boring stuff (defining classes for clients, servers, filling
the right fields and getting the right number of ':'... gets done for you.

The defaults classes for the CLIENTS and the SERVERS should be quite okay,
basically you only need to setup the SERVER INFO at the beginning and
insert uplinks and downlinks at the bottom.

Remember this is only some *basic* settings to keep things *simple*.
You get most features in there, but it should be more than
enough for normal use.
You may want to check doc/example.conf and doc/INSTALL
for more detailed explanations of all available options.

The ircd.conf is parsed and stored in such a way that it's as if
it was read *backwards*, so if you want for instance to have a server
link tried first, it should be located *LAST* in the ircd.conf.

To get to a traditionnal ircd.conf, all you need to type is:
                          m4 ircd.conf

Also remember to run "chkconf" and see if there is no problem!!!

Below are the explanations of the available extended m4 macros
which are located in the 'ircd.m4ext' package.
All you need is edit your ircd.conf to insert them where needed.

PS: the word `dnl' means `this is a comment' for m4 :)

--------------------------------------------------------------------------
                         SERVER INFORMATION
--------------------------------------------------------------------------
WARNING! no commas "," or semi-colons ":" in the text!!!
If you want commas you need to quote the string with `'

SETUP THE FOLLOWING!
   SERVERNAME : name of the server
   SERVERTEXT : text name
   SERVERPORT : port number the server will operate on. (6667 usually)
   ADMINLOCATION : where the server is located
   ADMINISTRATOR : who should be asked for problems related to the server
   ADMIN_EMAIL   : the administrator's electronic mail address

Example:
define(`SERVERNAME', `sil.polytechnique.fr')
define(`SERVERTEXT', `Ecole Polytechnique, Paris, FRANCE')
define(`SERVERPORT', `6667')

define(`ADMINLOCATION', `Ecole Polytechnique, Palaiseau, FRANCE')
define(`ADMINISTRATOR', `IRC-Administrator Nicolas PIOCH (Nap@IRC)')
define(`ADMIN_EMAIL',   `<Nicolas.Pioch@enst.fr>')

--------------------------------------------------------------------------
                         CONNECTION CLASSES
--------------------------------------------------------------------------
I usually define those classes for the servers, they may or may not
be appropriate for you.
A basic installation may not need the AUTOCON class, you can fairly
do with DOWNLINK and UPLINK.

Class explanations:
   DOWNLINK : many downlinks, no autoconnect.
   UPLINK   : max 1 server connected, autoconnect.
   AUTOCON  : no max, autoconnect.
Note that uplinks you don't connect to normally go into the DOWNLINK class.

   SERVER_SENDQ      : limit in SendQ for servers, in bytes.
   SERVER_MAXCONNECT : limit in the number of servers connected, per class.
   UPLINK_CONNECT    : seconds for autoconnecting to the uplink.
   AUTOCON_CONNECT   : seconds for autoconnecting to the servers.

Example:
define(`SERVER_SENDQ',      `400000')
define(`SERVER_MAXCONNECT', `20')
define(`UPLINK_CONNECT',    `100')
define(`AUTOCON_CONNECT',   `300')

--------------------------------------------------------------------------
                 TO BE ADDED AT THAT POINT IN ircd.conf
--------------------------------------------------------------------------
The extended m4 macros should be loaded now. Add this line to the ircd.conf:
include(`ircd.m4ext')dnl

--------------------------------------------------------------------------
                          AUTORIZED CLIENTS
--------------------------------------------------------------------------
Use the following to accept clients:
The first parameter should be an IP address, second a hostname.
You can add a passwd as field 3 if you want.

   CLIENT_DOAUTH(ip#mask [,hostmask [,passwd]]) to allow/auth clients,
   CLIENT_NOAUTH(ip#mask [,hostmask [,passwd]]) to bypass auth for clients.

   GUEST_DOAUTH(ip#mask [,hostmask [,passwd]]) to allow/auth clients,
   GUEST_NOAUTH(ip#mask [,hostmask [,passwd]]) to bypass auth for clients.

Clients are often local. 'Guests' are non-local clients.
If you allow foreign client connections, you can put them in the 'Guest'
class to limit the impact of abusers on the network.
Default values in ircd.m4ext limit the connections to 100 local-clients
and 50 guests (edit ircd.m4ext if you want to change that).

You should be aware that the ip#mask and the hostmask are *NOT* related!
They only put the matching clients in the same class...

Example:
GUEST_DOAUTH(*)
# No auth needed for local clients, we don't run authd here.
CLIENT_NOAUTH(192.48.98.*,*.polytechnique.fr)

You'll need to add such a line to put unix domain socket connections
into the CLIENT class:
CLIENT_NOAUTH(*/*)

--------------------------------------------------------------------------
                          AUTORIZED OPERATORS
--------------------------------------------------------------------------
Use the following to define operators:
   OPERATOR(nick,user@host,password)

Example:
OPERATOR(Nap,*@*.polytechnique.fr,xqeZNstoBMDtc)

--------------------------------------------------------------------------
                             KILLED USERS
--------------------------------------------------------------------------
Use the following to forbid use of the server to troublesome users:
   CLIENT_KILLED(hostmask [,user])

Example:
CLIENT_KILLED(*,root)
CLIENT_KILLED(*.oxy.edu)

--------------------------------------------------------------------------
                       LISTEN TO ADDITIONAL PORTS
--------------------------------------------------------------------------
Use the following to add additional ports to listen to
   ADD_PORT(portnum [,where])
       Portnum : what the port is called
       Where   : directory for unix-domain sockets,
                IP# mask to accept connections from, for internet sockets.

Example:
ADD_PORT(6667,/tmp/.ircd)
ADD_PORT(6666)

--------------------------------------------------------------------------
                         SERVER CONNECTIONS
--------------------------------------------------------------------------
Syntax for the definition of server links is:
  Servername        : user@host of the remote server
  MaskedServername  : under which mask will the remote server will be known
  Serverport        : remote server port number
  Cpasswd           : password to send over when your server activates the link
  Npasswd           : password your should get from the remote server
                      if you don't fill in that field, Cpasswd will be used.
  stripcount        : how many parts of *MY* server name to strip.
                      for instance, if my servername is a.b.c.d.edu
                      and my stripcount 2, then the server will be seen on
                      the network as *.c.d.edu

   SERVER_DOWNLINK( Servername, CPasswd
		   [,NPasswd [,MaskedServername [,Stripcount]]] )
   SERVER_AUTOCON( Servername, CPasswd
                   [,NPasswd [,MaskedServername [,Serverport [,Stripcount]]] )
   SERVER_UPLINK( Servername, CPasswd
                   [,NPasswd [,MaskedServername [,Serverport [,Stripcount]]] )

If no MaskedServername, it's assumed to be the same as Servername.
If Serverport is not specified a default value of 6667 is assumed.
If Stripcount is not there, your server won't be hostmasked.

Remember, backup uplinks you don't connect to normally (no autoconnect)
go into the DOWNLINK list! sorry if the name is a little misguiding...


   SERVER_LEAF(MaskedServername [,ServerForbidden [,count]] )
   SERVER_HUB(MaskedServername [,ServerAllowed] )

MaskedServername is the *EXACT* name of the server as masked on the IRCnet.
ServerForbidden or ServerAllowed can have wildcards.

For SERVER_LEAF :
  the link to that server will be dropped if it tries to introduce
    - a server matching the ServerForbidden mask
    - more servers than the specified count

For SERVER_HUB :
  the link will be dropped if the server tries to introduce
    - a server for which a matching ServerAllowed mask does not exist.

Example:
# This is a downlink which can introduce any server for france.
# They use AUTHD do I can put "irc@" in the server part.
SERVER_DOWNLINK(irc@eurecom8.cica.fr,zzz,,eurecom8.cica.fr)
SERVER_HUB(eurecom8.cica.fr,*.fr)

# Another downlink, they don't run AUTHD.
SERVER_DOWNLINK(dafne.mines.u-nancy.fr,passhere)
SERVER_HUB(dafne.mines.u-nancy.fr,*.fr)
SERVER_HUB(dafne.mines.u-nancy.fr,*.be)

# A Leaf that can introduce 5 server max.
SERVER_DOWNLINK(cyclone.enst.fr,hello)
SERVER_LEAF(cyclone.enst.fr,,5)

# *.fi is hostmasked! can you believe that? :)
SERVER_DOWNLINK(128.214.6.100,finally,npasswd-here,*.fi)
SERVER_HUB(*.fi)

# The list of my uplinks, HUBS for the whole network.
SERVER_UPLINK(irc-2.mit.edu,hidog)
SERVER_HUB(irc-2.mit.edu)

SERVER_UPLINK(eff.org,hihelen)
SERVER_HUB(eff.org)

Feel free to pinpoint any errors in the small documentation...
<Nicolas.Pioch@enst.fr>

-- End of the manual file.
