IRC II v1.7x New Stuff

A new command /BIND allows you to change the key binding of any IRC
II key.  For example, to change Control W to erase the previous word,
you would do:
    /BIND ^W DELETE_PREVIOUS_WORD
Any key may be bound.  To override a keys binding (and have it insert
itself into the input line, use the quote key (bound to Control Q by
default).  Thus hitting Control Q follow by Control W will insert an
inverse-video W instead of deleting the previous word.  

There are also two meta keys for your use as well.  The first is, by
default, bound to the Escape key.  The second is unbound.  It may be
bound to, for example, Control X by doing:
    /BIND ^X META2_CHARACTER
Once a meta key is bound (as above), you can bind meta key sequences
like this:
    /BIND ^Xl PARSE_COMMAND /LIST
This binds the sequence Control X followed by a lower case l to
execute the IRC command /LIST.  

Other interesting function include TYPE_TEXT, which types the extra
parameter into the input line, NOTHING, which effectively disables a
key, and SELF_INSERT, which has the key insert itself into the input
line.  Other functions are fairly self explanatory, so do a /HELP
BIND.



V1.70 supports HP-UX systems.  See the INSTALL file for info on how
to set that up.


There now exists support for a global .ircrc file that will be loaded
prior to the loading of the users .ircrc file.  See the INSTALL file
for details on how to set this up.



There now exists support for a motd file that will be displayed prior
to loading of any .ircrc files.  See the INSTALL file for details.



Wildcard matching has been changed to support such things as:
    /WHO -HOST *CMU* B*E
Also, a new /WHO switch has been added, -ALL, which will match the
next wildcard expression with any field that WHO returns.



Leading spaces now work properly in MSGs and other places where they
should have worked properly before.



The inline aliases feature now supports a termination character for
an alias.  Thus if you have an "foo" aliases as "re"
    This is a %foo%test
becomes
    This is a retest
No terminating % is needed at then end of a word:
    %foo has only two letters
becomes
    re has only two letters



The help stuff has been revamped.  All help info is stored in
separate files in a specified directory (see the Makefile for info
about this).  The HELP command scans this directory and displays any
appriate information.  The upshot of this is two fold.  First, the
help command is somewhat slower than it was before.  Second, you can
easily add or change help information simply by editting or creating
new help files.  Any file in the help directory with the .irchelp
extension will be included in /HELP listings, and any file with the
.varhelp extension will be included in the /HELP SET listings.  Other
file type will probably follow soon (such as a .keyhelp type for the
key binding help).


A new variable LASTLOG_MSG_ONLY has been added.  When used in
conjunction with the LASTLOG_CONVERSATION variable, this causes the
lastlog to record only sent and received MSGs.  Here are the possible
combinations of these two variables:

LASTLOG_CONVERSATION is OFF
LASTLOG_MSG_ONLY is OFF		 all text is recorded

LASTLOG_CONVERSATION is ON
LASTLOG_MSG_ONLY is OFF	         only conversational text is recorded

LASTLOG_CONVERSATION is ON
LASTLOG_MSG_ONLY is ON	         only MSG's are recorded

LASTLOG_CONVERSATION is OFF
LASTLOG_MSG_ONLY is ON		 all text is recorded



The /SERVER function now take an optional additional parameter which
is the port number to connect to.



There is currently support for the WHOWAS command, if your server
supports it.


Two switches have been added (one was really around for a while, it
just wasn't common knowledge), -d and -e.  

The -d switch puts IRC II in "dumb" terminal mode, where no fancy
screen stuff is done.  Output goes straight to stdout and input comes
straight from stdin.  No fancy input editting is done (except that
which your shell does) and therefore key bindings are ignored.

The -e switch must be the last switch on the command line.  Directly
following the -e switch is a program name followed by any arguments
to that program.  IRC II then forks and returns you to the shell.
All output from IRC II goes to the program named on the command line,
and all output from that program goes to IRC II (in the form of
commands).  This switch can be used to create automaton with IRC II.


A new command, HISTORY, has been added.  It will display all or part
of the command history.  Perhaps soon we can have shell like history
replacement.
