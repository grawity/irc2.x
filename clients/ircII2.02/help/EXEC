Usages:
  EXEC <shell commands>
  EXEC -OUT [<process number>|<shell commands]
  EXEC -MSG <nickname> [<process number>|<shell commands]
  EXEC -IN <process number> <text to send to process>
  EXEC -WINDOW [<process number>|<shell commands>]
  EXEC -<signal> <process number>

  EXEC allows you to start subprocesses in IRCII and manipulate
  them in various ways.  You can start multiple subprocesses
  simultaneously and access them via a process number assigned
  by IRCII.  You can list all currently running subprocesses by
  using EXEC with no parameters.  The process number is the
  number displayed in this listing.

  The first form of EXEC will simply start a subprocess and send
  it's output to your display.

  The second form tells IRCII to send the output of the process
  to you current channel.  For example:
    EXEC -OUT ls
  sends the output of ls to your channel.  
    EXEC -OUT 1
  tells IRCII to send the output of subprocess 1 to your
  channel.  Subprocess 1 must exist already by a previous call
  to EXEC.

  The third form is much like the second, except that it sends
  to the specified nickname or nicknames (the format of the
  nicknames is the same as for MSG).  As with the second form,
  you can start a subprocess with -MSG, or you can change an
  already running process to send it's output to the given
  nicknames.

  The fourth form lets you send a line of input to a running
  subprocess.  For example:
    EXEC -IN 0 This is a test.
  Sends "This is a test." to subprocess 0.  This processes must
  have prevously been started with a call to EXEC.  An alternate
  method of sending text to processes is using the MSG or QUERY
  command.  In the place of a nickname, you may specify %n, when
  n is a current running processes number.  The text of the
  message will then go the that process.

  The fifth form lets you specify that you want all output from
  the process to go to the current window.  Normally, output
  from processes goes to whichever window has a level setting of
  CRAP.  This locks the output into the current window.  
    EXEC -WINDOW 1 
  Sends the output of process 1 to the current window.

  The last form lets you send various signals to subprocesses.
  The allowable signals are:
    HUP     INT     QUIT     ILL     TRAP     IOT     EMT
    FPE     KILL    BUS      SEGV    SYS      PIPE    ALRM
    TERM    URG     STOP     TSTP    CONT     CHLD    TTIN
    TTOU    IO      XCPU     XFSZ    VTALRM   PROF    WINCH
    LOST    USR1    USR2
  What these signals do depends on the process running, etc.
    EXEC -KILL 0
  Sends a KILL signal to process 0, forcing it to exit
  immediately.  If you want to read more about these signals, do
  a "man kill" at your shell prompt.

  See also: 
    SET SHELL
    SET SHELL_FLAGS
    SET SHELL_LIMIT
    SET NOTIFY_ON_TERMINATION    
